name: Python Tests

on: [push, pull_request]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Run Pytest and Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create swagger output dir
        run: mkdir -p swagger-coverage-output

      - name: Run tests with Swagger Coverage
        run: |
          pytest tests --alluredir=allure-results --disable-warnings

      - name: Debug swagger output
        if: ${{ always() }}
        run: |
          echo "Swagger output:"
          ls -la swagger-coverage-output || echo "No output dir"

      - name: Generate Swagger Coverage Report
        if: ${{ always() }}
        run: |
          LIB_DIR=$(python -c "import swagger_coverage_py, os; print(os.path.join(os.path.dirname(swagger_coverage_py.__file__), 'swagger-coverage-commandline', 'lib'))")
          echo "Swagger lib dir: $LIB_DIR"
          CLASSPATH=$(echo "$LIB_DIR"/*.jar | tr ' ' ':')

          java -cp "$CLASSPATH" \
            com.github.viclovsky.swagger.coverage.CommandLine \
            -s swagger-doc-dm-api-account.json \
            -i swagger-coverage-output \
            -c swagger-coverage-config-dm-api-account.json

      - name: Move Swagger HTML report to notifier
        if: ${{ always() }}
        run: mv swagger-coverage-dm-api-account.html packages/notifier/

      - name: Send report to Telegram
        if: ${{ always() }}
        run: python -m packages.notifier.bot

      - name: Archive allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'

      - run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz
          sudo tar -xvzf allure-2.29.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure

      - name: Download allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - run: allure generate -c allure-results -o _site

      - name: Upload Allure site
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site

  publish-report:
    name: Publish Allure Report
    runs-on: ubuntu-latest
    needs: generate-report

    steps:
      - uses: actions/checkout@v4

      - name: Download site report
        uses: actions/download-artifact@v4
        with:
          name: _site
          path: _site

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - run: echo 'https://ekaterinavolynkina.github.io/dm_api_tests/'
